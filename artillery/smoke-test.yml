config:
  # This is a test server run by team Artillery
  # It's designed to be highly scalable
  # target: http://backend.dev.housingbayarea.int
  target: "{{ $env.URL }}"
  processor: lib/fake-app-for-artillery.ts
  phases:
    - duration: 30
      arrivalRate: 1
      name: Warm up phase
  #   - duration: 1h
  #     arrivalRate: 2
  #     name: First Hour
  #   - duration: 6h
  #     arrivalRate: 3
  #     name: Bulk of test
  # # Load & configure a couple of useful plugins
  # # https://docs.art/reference/extensions
  plugins:
    ensure: {}
    apdex: {}
    metrics-by-endpoint: {}
    expect: {}
    fake-data: {}
  apdex:
    threshold: 100
  ensure:
    thresholds:
      - http.response_time.p99: 4000
      - http.response_time.p95: 2000
  variables:
    user: "{{ $env.EMAIL }}"
    password: "{{ $env.PASSWORD }}"
    url: "{{ $env.URL }}"
    listingId: "{{ $env.LISTING }}"
scenarios:
  # Approximately 60% of all VUs will run this scenario.
  - name: get all listings
    weight: 5
    flow:
      - get:
          url: /listings
          expect:
            - statusCode: 200
  # Approximately 30% of all VUs will run this scenario.
  - name: get an individual listing
    weight: 4
    flow:
      - get:
          url: /listings/{{ listingId }}
          expect:
            - statusCode: 200
  # Approximately 10% of all VUs will run this scenario.
  - name: Apply for listing
    weight: 2
    flow:
      - get:
          url: /listings/{{ listingId }}
          expect:
            - statusCode: 200
      - post:
          url: /auth/login
          json:
            email: "{{ user }}"
            password: "{{ password }}"
            expect:
              - statusCode: 200
      - post:
          url: /applications
          beforeRequest:
            - generateApplication
          capture:
            json: $.body
            as: body
          log: "{{ body }}"
          expect:
            - statusCode: 201
